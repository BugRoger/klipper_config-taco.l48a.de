#####################################################################
#   Macros
#####################################################################
[gcode_macro CLEAN_NOZZLE]
rename_existing: BASE_CLEAN_NOZZLE
gcode:
  STATUS_CLEANING
  CG28
  BASE_CLEAN_NOZZLE

[gcode_macro QGL]
gcode:
  STATUS_LEVELING
  M117 QGL...
  QUAD_GANTRY_LEVEL 
  HOMING_Z

[gcode_macro CQGL]
gcode:
  {% if not printer.quad_gantry_level.applied %}
  QGL
  {% endif %}


[gcode_macro HOMING]
gcode:
  STATUS_HOMING
  M117 Homing...
  G28

[gcode_macro HOMING_Z]
gcode:
  STATUS_HOMING
  M117 Homing Z...
  G28 Z

[gcode_macro CG28]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  HOMING
  {% endif %}




[gcode_macro NEVERMORE_ON]
gcode:
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0.3

[gcode_macro NEVERMORE_OFF]
gcode:
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0

[gcode_macro EXHAUST_ON]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.2

[gcode_macro EXHAUST_OFF]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0

[delayed_gcode DELAYED_NEVERMORE_OFF]
gcode:
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0

[delayed_gcode DELAYED_EXHAUST_OFF]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0

[delayed_gcode DELAYED_OFF]
gcode:
  OFF  

[gcode_macro ACTIVATE_EXTRUDER]
rename_existing: ACTIVATE_EXTRUDER_BASE
gcode:


[gcode_macro PRINT_START]
gcode:
  {% set BED = params.BED|default(60)|int %}
  {% set EXTRUDER = params.EXTRUDER|default(215)|int %}
  {% set Z_ADJUST = params.Z_ADJUST|default(0.0)|float %}
  {% set PA = params.PA|default(0.04)|float %}
  G90 ; use absolute coordinates
  M83 ; extruder relative mode
  SET_PIN PIN=caselight VALUE=1
  UPDATE_DELAYED_GCODE ID=DELAYED_EXHAUST_OFF DURATION=0
  UPDATE_DELAYED_GCODE ID=DELAYED_NEVERMORE_OFF DURATION=0
  UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0 
  SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
  SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1 PURGE_AMOUNT=30

  SET_GCODE_OFFSET Z=0.0
  BED_MESH_CLEAR

  STATUS_HEATING
  M117 Preheat Probing
  M140 S{BED} ; Heat Bed
  M104 S150 ; Heat Extruder to 150
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED-3} MAXIMUM={BED}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=149 MAXIMUM=150
  CLEAN_NOZZLE

  QGL    
  BED_MESH_CALIBRATE 
  BED_MESH_PROFILE LOAD=default
  SET_GCODE_OFFSET Z_ADJUST={Z_ADJUST} MOVE=1
  SET_PRESSURE_ADVANCE ADVANCE={PA}
  PARKBED

  STATUS_HEATING
  M117 Heating Extruder
  M104 S{EXTRUDER}   
  NEVERMORE_ON
  EXHAUST_ON
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER-1} MAXIMUM={EXTRUDER}
  CLEAN_NOZZLE

  STATUS_PRINTING
  M117 Printing...
  VORON_PURGE
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro PRINT_END]
gcode:    
  SAVE_GCODE_STATE NAME=STATE_PRINT_END
  UPDATE_DELAYED_GCODE ID=DELAYED_EXHAUST_OFF DURATION=120
  UPDATE_DELAYED_GCODE ID=DELAYED_NEVERMORE_OFF DURATION=120
  UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=10

  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-5.0 F1800                 ; retract filament

  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0    
  SET_FAN_SPEED FAN=nevermore_fan SPEED=1
  PARKREAR_XY
  BEEP_PRINT_END
  M117 Awaiting orders...

  RESTORE_GCODE_STATE NAME=STATE_PRINT_END
  STATUS_READY

######################### PAUSE/RESUME/CANCEL #########################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT

# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  # Parameters
  {% set z = params.Z|default(10)|int %}																					; z hop amount
  
  {% if printer['pause_resume'].is_paused|int == 0 %}		
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}									    						; set z hop variable for reference in resume macro
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}									; set hotend temp variable for reference in resume macro
                              
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0																	; disable filament sensor		
      SAVE_GCODE_STATE NAME=PAUSE																							; save current print position for resume				
      BASE_PAUSE																											; pause print
      {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}										; check that zhop doesn't exceed z max
          G91																												; relative positioning
          G1 Z{z} F900																									; raise Z up by z hop amount
      {% else %}
          { action_respond_info("Pause zhop exceeds maximum Z height.") }													; if z max is exceeded, show message and set zhop value for resume to 0
          SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
      {% endif %}
      G90																													; absolute positioning
      G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500									; park toolhead at front center
      SAVE_GCODE_STATE NAME=PAUSEPARK																						; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)	
      M104 S0																												; turn off hotend
      SET_IDLE_TIMEOUT TIMEOUT=43200															    						; set timeout to 12 hours
  {% endif %}

# Return Z hop back down 10mm, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  # Parameters
  {% set e = params.E|default(2.5)|int %}
  
  {% if printer['pause_resume'].is_paused|int == 1 %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1																	; enable filament sensor
      RESETRGB																											; reset LCD color
      SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}											; set timeout back to configured value
      {% if etemp > 0 %}
          M109 S{etemp|int}																								; wait for hotend to heat back up
      {% endif %}
      RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450															; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)	
      G91																													; relative positioning
      M83																													; relative extruder positioning
      {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}												
          G1 Z{zhop * -1} E{e} F900																						; prime nozzle by E, lower Z back down
      {% else %}						
          G1 Z{zhop * -1} F900																							; lower Z back down	without priming (just in case we are testing the macro with cold hotend)
      {% endif %}								
      RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450																; restore position
      BASE_RESUME																											; resume print
  {% endif %}

# Filament runout / change alias	
[gcode_macro M600]
gcode:
  LCDRGB R=0 G=1 B=0	# Turn LCD green
  PAUSE

######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=UNLOADFILAMENT
  M83                                   ; set extruder to relative
  BEEP_SUCCESS
  G1 E10 F300                           ; extrude a little to soften tip 
  G1 E-50 F1800                        ; retract filament completely
  G1 E-50 F1800                        ; retract filament completely
  BEEP_ERROR
  RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=LOADFILAMENT
  M83 ; set extruder to relative
  BEEP_SUCCESS
  G1 E50 F300
  G1 E50 F300
  RESTORE_GCODE_STATE NAME=LOADFILAMENT
   
[gcode_macro HOT_UNLOAD]
gcode:
  # Parameters
  {% set t = params.T|default(240)|int %}
  
  M104 S{t}
  PARKFRONT
  M109 S{t}
  UNLOAD_FILAMENT
	
[gcode_macro HOT_LOAD]
gcode:
  # Parameters
  {% set t = params.T|default(215)|int %}
  
  M104 S{t}
  PARKFRONT
  M109 S{t}
  LOAD_FILAMENT

######################### PARKING #########################

# Park front center
[gcode_macro PARKFRONT]
gcode:
  CG28                                  																						; home if not already homed
  SAVE_GCODE_STATE NAME=PARKFRONT
  G90                                   																						; absolute positioning
  G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500		
  RESTORE_GCODE_STATE NAME=PARKFRONT
	
# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
  CG28                                  																						; home if not already homed
  SAVE_GCODE_STATE NAME=PARKFRONT
  G90                                   																						; absolute positioning
  G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500										
  RESTORE_GCODE_STATE NAME=PARKFRONT
	
# Park top rear left
[gcode_macro PARKREAR]
gcode:
  CG28                                  																						; home if not already homed
  SAVE_GCODE_STATE NAME=PARKREAR
  G90                                   																						; absolute positioning
  G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500		
  RESTORE_GCODE_STATE NAME=PARKREAR

[gcode_macro PARKREAR_XY]
gcode:
  CG28                                  																						; home if not already homed
  SAVE_GCODE_STATE NAME=PARKREAR
  G91                            ; relative       
  G1 Z50 F3000                   ; move up 50mm
  G90                                   																						; absolute positioning
  G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} F19500		

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
  CG28                                  																						; home if not already homed
  SAVE_GCODE_STATE NAME=PARKCENTER
  G90                                   																						; absolute positioning
  G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
  RESTORE_GCODE_STATE NAME=PARKCENTER
	
# Park 50mm above center of bed
[gcode_macro PARKBED]
gcode:
  CG28                                  																						; home if not already homed
  SAVE_GCODE_STATE NAME=PARKBED
  G90                                   																						; absolute positioning
  G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z50 F19500										
  RESTORE_GCODE_STATE NAME=PARKBED
	
######################### ALIASES/SHORTCUTS #########################
	
# Convert Marlin linear advance commands to SET_PRESSURE_ADVANCE.
# Used in conjunction with Marlin's linear advance calibration tool: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
  # Parameters
  {% set k = params.K|default(0)|float %}
  SET_PRESSURE_ADVANCE ADVANCE={k}

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
  M84												; turn steppers off
  TURN_OFF_HEATERS								; turn bed / hotend off
  M107                         	   			 	; turn print cooling fan off
  SET_PIN PIN=caselight VALUE=0					; turn light off